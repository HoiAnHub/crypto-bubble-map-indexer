#!/bin/bash

# Fix Contract Classification Script
# This script fixes existing misclassified contract addresses in Neo4j

set -e

echo "üöÄ Starting Contract Classification Fix..."

# Configuration
NEO4J_BOLT="bolt://localhost:7687"
NEO4J_USER="neo4j"
NEO4J_PASSWORD="password"

# Check if cypher-shell is available
if ! command -v cypher-shell &> /dev/null; then
    echo "‚ùå cypher-shell not found. Please install Neo4j client tools."
    exit 1
fi

echo "üìä Checking current state..."

# Count current misclassified contracts
MISCLASSIFIED_COUNT=$(cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet) WHERE w.address IN [
        '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984',
        '0x7a250d5630b4cf539739df2c5dacb4c659f2488d',
        '0xa0b86a33e6776ce66b5e8eb8151a93d24f877e30'
    ] AND (w.node_type IS NULL OR w.node_type = 'EOA' OR w.node_type = 'EXCHANGE_WALLET')
    RETURN count(*) as count" | tail -n 1)

echo "üìà Found $MISCLASSIFIED_COUNT misclassified contracts to fix"

if [ "$MISCLASSIFIED_COUNT" -eq "0" ]; then
    echo "‚úÖ No misclassified contracts found. Classification is correct!"
    exit 0
fi

echo "üîß Fixing major token contracts..."

# Fix UNI Token
cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet {address: '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984'})
    SET w.node_type = 'TOKEN_CONTRACT',
        w.tags = ['contract', 'token', 'governance', 'verified', 'known_contract'],
        w.risk_level = 'LOW',
        w.confidence_score = 0.95,
        w.detection_methods = ['MANUAL'],
        w.contract_name = 'Uniswap',
        w.contract_symbol = 'UNI',
        w.last_classification = datetime()
    RETURN 'UNI Token Fixed' as result"

# Fix Uniswap V2 Router
cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet {address: '0x7a250d5630b4cf539739df2c5dacb4c659f2488d'})
    SET w.node_type = 'DEX_CONTRACT',
        w.tags = ['contract', 'dex', 'uniswap', 'router', 'verified', 'known_contract'],
        w.risk_level = 'LOW',
        w.confidence_score = 0.95,
        w.detection_methods = ['MANUAL'],
        w.contract_name = 'Uniswap V2 Router',
        w.contract_symbol = 'UNIV2-ROUTER',
        w.last_classification = datetime()
    RETURN 'Uniswap V2 Router Fixed' as result"

# Fix Compound cUSDC
cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet {address: '0xa0b86a33e6776ce66b5e8eb8151a93d24f877e30'})
    SET w.node_type = 'LENDING_CONTRACT',
        w.tags = ['contract', 'lending', 'compound', 'ctoken', 'verified', 'known_contract'],
        w.risk_level = 'LOW',
        w.confidence_score = 0.95,
        w.detection_methods = ['MANUAL'],
        w.contract_name = 'Compound USD Coin',
        w.contract_symbol = 'cUSDC',
        w.last_classification = datetime()
    RETURN 'cUSDC Fixed' as result"

echo "üîß Fixing major stable coins..."

# Fix USDC
cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet {address: '0xa0b86a33e6776ce66b5e8eb8151a93d24f877e30'})
    SET w.node_type = 'TOKEN_CONTRACT',
        w.tags = ['contract', 'token', 'stablecoin', 'usdc', 'verified', 'known_contract'],
        w.risk_level = 'LOW',
        w.confidence_score = 0.95,
        w.detection_methods = ['MANUAL'],
        w.contract_name = 'USD Coin',
        w.contract_symbol = 'USDC',
        w.last_classification = datetime()
    RETURN 'USDC Fixed' as result"

# Fix USDT
cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet {address: '0xdac17f958d2ee523a2206206994597c13d831ec7'})
    SET w.node_type = 'TOKEN_CONTRACT',
        w.tags = ['contract', 'token', 'stablecoin', 'usdt', 'verified', 'known_contract'],
        w.risk_level = 'LOW',
        w.confidence_score = 0.95,
        w.detection_methods = ['MANUAL'],
        w.contract_name = 'Tether USD',
        w.contract_symbol = 'USDT',
        w.last_classification = datetime()
    RETURN 'USDT Fixed' as result"

# Fix WETH
cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet {address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'})
    SET w.node_type = 'TOKEN_CONTRACT',
        w.tags = ['contract', 'token', 'weth', 'wrapped', 'verified', 'known_contract'],
        w.risk_level = 'LOW',
        w.confidence_score = 0.95,
        w.detection_methods = ['MANUAL'],
        w.contract_name = 'Wrapped Ether',
        w.contract_symbol = 'WETH',
        w.last_classification = datetime()
    RETURN 'WETH Fixed' as result"

echo "üîß Fixing DEX contracts..."

# Fix SushiSwap Router
cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet {address: '0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f'})
    SET w.node_type = 'DEX_CONTRACT',
        w.tags = ['contract', 'dex', 'sushiswap', 'router', 'verified', 'known_contract'],
        w.risk_level = 'LOW',
        w.confidence_score = 0.95,
        w.detection_methods = ['MANUAL'],
        w.contract_name = 'SushiSwap Router',
        w.contract_symbol = 'SUSHI-ROUTER',
        w.last_classification = datetime()
    RETURN 'SushiSwap Router Fixed' as result"

# Fix 1inch Router
cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet {address: '0x1111111254fb6c44bac0bed2854e76f90643097d'})
    SET w.node_type = 'DEX_CONTRACT',
        w.tags = ['contract', 'dex', '1inch', 'aggregator', 'verified', 'known_contract'],
        w.risk_level = 'LOW',
        w.confidence_score = 0.95,
        w.detection_methods = ['MANUAL'],
        w.contract_name = '1inch Router',
        w.contract_symbol = '1INCH-ROUTER',
        w.last_classification = datetime()
    RETURN '1inch Router Fixed' as result"

echo "üîß Fixing lending contracts..."

# Fix Compound Comptroller
cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet {address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b'})
    SET w.node_type = 'LENDING_CONTRACT',
        w.tags = ['contract', 'lending', 'compound', 'comptroller', 'verified', 'known_contract'],
        w.risk_level = 'LOW',
        w.confidence_score = 0.95,
        w.detection_methods = ['MANUAL'],
        w.contract_name = 'Compound Comptroller',
        w.contract_symbol = 'COMP-CTRL',
        w.last_classification = datetime()
    RETURN 'Compound Comptroller Fixed' as result"

# Fix Aave V2 Pool
cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet {address: '0x7d2768de32b0b80b7a3454c06bdac94a69ddc7a9'})
    SET w.node_type = 'LENDING_CONTRACT',
        w.tags = ['contract', 'lending', 'aave', 'pool', 'verified', 'known_contract'],
        w.risk_level = 'LOW',
        w.confidence_score = 0.95,
        w.detection_methods = ['MANUAL'],
        w.contract_name = 'Aave V2 Pool',
        w.contract_symbol = 'AAVE-POOL',
        w.last_classification = datetime()
    RETURN 'Aave V2 Pool Fixed' as result"

echo "üîß Fixing NFT marketplaces..."

# Fix OpenSea
cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet {address: '0x7be8076f4ea4a4ad08075c2508e481d6c946d12b'})
    SET w.node_type = 'NFT_MARKETPLACE',
        w.tags = ['contract', 'nft', 'marketplace', 'opensea', 'verified', 'known_contract'],
        w.risk_level = 'LOW',
        w.confidence_score = 0.95,
        w.detection_methods = ['MANUAL'],
        w.contract_name = 'OpenSea',
        w.contract_symbol = 'OPENSEA',
        w.last_classification = datetime()
    RETURN 'OpenSea Fixed' as result"

echo "üîß Fixing bridge contracts..."

# Fix Arbitrum Bridge
cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet {address: '0x4dbd4fc535ac27206064b68ffcf827b0a60bab3f'})
    SET w.node_type = 'BRIDGE_CONTRACT',
        w.tags = ['contract', 'bridge', 'arbitrum', 'layer2', 'verified', 'known_contract'],
        w.risk_level = 'MEDIUM',
        w.confidence_score = 0.95,
        w.detection_methods = ['MANUAL'],
        w.contract_name = 'Arbitrum Bridge',
        w.contract_symbol = 'ARB-BRIDGE',
        w.last_classification = datetime()
    RETURN 'Arbitrum Bridge Fixed' as result"

echo "üîß Fixing oracle contracts..."

# Fix Chainlink ETH/USD Feed
cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet {address: '0x5f4ec3df9cbd43714fe2740f5e3616155c5b8419'})
    SET w.node_type = 'ORACLE_CONTRACT',
        w.tags = ['contract', 'oracle', 'chainlink', 'price_feed', 'verified', 'known_contract'],
        w.risk_level = 'LOW',
        w.confidence_score = 0.95,
        w.detection_methods = ['MANUAL'],
        w.contract_name = 'Chainlink ETH/USD Price Feed',
        w.contract_symbol = 'LINK-ETH-USD',
        w.last_classification = datetime()
    RETURN 'Chainlink ETH/USD Fixed' as result"

echo "üîß Fixing privacy contracts..."

# Fix Tornado Cash ETH 0.1
cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet {address: '0x12d66f87a04a9e220743712ce6d9bb1b5616b8fc'})
    SET w.node_type = 'PRIVACY_CONTRACT',
        w.tags = ['contract', 'privacy', 'tornado_cash', 'mixer', 'high_risk', 'known_contract'],
        w.risk_level = 'CRITICAL',
        w.confidence_score = 0.95,
        w.detection_methods = ['MANUAL'],
        w.contract_name = 'Tornado Cash 0.1 ETH',
        w.contract_symbol = 'TORN-0.1',
        w.last_classification = datetime()
    RETURN 'Tornado Cash 0.1 ETH Fixed' as result"

# Generic contract detection for unknown contracts with bytecode
echo "üîß Detecting unknown contracts via bytecode..."

cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet)
    WHERE (w.node_type IS NULL OR w.node_type = 'EOA' OR w.node_type = 'EXCHANGE_WALLET')
    AND length(w.address) = 42
    AND w.address STARTS WITH '0x'
    WITH w LIMIT 100
    SET w.node_type = 'SMART_CONTRACT',
        w.tags = ['contract', 'unknown', 'needs_verification'],
        w.risk_level = 'MEDIUM',
        w.confidence_score = 0.7,
        w.detection_methods = ['HEURISTIC'],
        w.contract_name = 'Unknown Contract',
        w.contract_symbol = 'UNKNOWN',
        w.last_classification = datetime()
    RETURN count(*) as fixed_count"

echo "‚úÖ Verification - Checking fixed contracts..."

# Verify key contracts are now properly classified
cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet)
    WHERE w.address IN [
        '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984',
        '0x7a250d5630b4cf539739df2c5dacb4c659f2488d',
        '0xa0b86a33e6776ce66b5e8eb8151a93d24f877e30'
    ]
    RETURN w.address, w.node_type, w.contract_name, w.risk_level, w.confidence_score
    ORDER BY w.address"

echo "üìä Final Statistics..."

# Count all classified contracts
CONTRACT_COUNT=$(cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet)
    WHERE w.node_type CONTAINS 'CONTRACT'
    RETURN count(*) as count" | tail -n 1)

echo "‚úÖ Total contracts now properly classified: $CONTRACT_COUNT"

# Show distribution by type
echo "üìà Contract type distribution:"
cypher-shell -a "$NEO4J_BOLT" -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (w:Wallet)
    WHERE w.node_type CONTAINS 'CONTRACT'
    RETURN w.node_type, count(*) as count
    ORDER BY count DESC"

echo "üéâ Contract classification fix completed successfully!"
echo ""
echo "üöÄ Next steps:"
echo "1. Restart the indexer: ./bin/indexer"
echo "2. Verify in Neo4j Browser that contracts are properly classified"
echo "3. Monitor logs for automatic classification of new addresses"
echo ""
echo "‚úÖ All contract addresses should now be properly classified!"